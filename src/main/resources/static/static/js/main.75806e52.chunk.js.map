{"version":3,"sources":["services/auth.js","state.js","components/navigation/Navigation.js","api.js","containers/comments/Comments.js","components/post/Post.js","containers/posts/Posts.js","containers/friends/Friends.js","components/login/Login.js","components/signup/Signup.js","components/postModal/PostModal.js","App.js","serviceWorker.js","index.js"],"names":["getAuthToken","localStorage","getItem","initialState","postUesrId","auth","authToken","jwtDecode","getAuth","posts","friends","query","comments","postModalOpened","StateContext","createContext","reducer","state","action","type","Object","objectSpread","post","concat","toConsumableArray","offset","defineProperty","postId","map","v","seq","StateProvider","_ref","children","react_default","a","createElement","Provider","value","useReducer","useStateValue","useContext","Navigation","_useState","useState","_useState2","slicedToArray","isOpen","setisOpen","_useStateValue","_useStateValue2","dispatch","Navbar","fixed","color","dark","expand","sticky","es","to","NavbarBrand","tag","className","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","index_esm","icon","Plus","size","Organization","name","email","removeItem","url","login","passwd","axios","principal","credentials","then","data","success","Error","response","getComments","userId","get","getApiKeyHeader","error","message","headers","api_key","defaults","Comment","props","Fragment","href","writer","dist_default","fromNow","ago","createAt","contents","Comments","_useStateValue2$","text","setText","handleResults","useEffect","postCommests","key","Comments_Comment","onChange","e","target","placeholder","Button","length","_","catch","alert","Post","username","KebabHorizontal","onLikeClick","likesOfMe","Thumbsup","likes","Comments_Comments","Posts","friendId","setError","_useState3","limit","_useState4","setQuery","latestQuery","useRef","latestPosts","current","handleResult","userKey","handleError","console","status","handleScroll","d","document","documentElement","Math","max","window","pageYOffset","scrollTop","body","innerHeight","height","offsetHeight","round","addEventListener","_ref2","params","getPost","likeThisPost","patch","log","Post_Post","assign","address","preventDefault","noThrow","Friend","Person","Friends","Friends_Friend","Login","_React$useState","React","_React$useState2","setEmail","_React$useState3","_React$useState4","setPasswd","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","rep","_auth","wrap","_context","prev","next","sent","apiToken","setItem","t0","abrupt","stop","apply","this","arguments","currentTarget","required","autoFocus","Signup","setName","_useState5","_useState6","password","setPassword","_useState7","_useState8","rePassword","setRePassword","id","signup","navigate","dir","PostModal","setContents","toggle","Modal","ModalHeader","ModalBody","spellCheck","ModalFooter","sendPost","Moment","globalLocale","App","state_StateProvider","Navigation_Navigation","Posts_Posts","path","containers_friends_Friends","Login_Login","components_signup_Signup","postModal_PostModal","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75806e52.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode';\n\nconst getAuthToken = () => {\n  return localStorage.getItem(\"auth_token\");\n};\n\nconst getAuth= () => {\n  const authToken = localStorage.getItem(\"auth_token\");\n    if (authToken) {\n      return jwtDecode(authToken);\n    }\n    return null;\n};\n\nexport { getAuthToken, getAuth };","\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { getAuth } from './services/auth';\n\nexport const initialState = {\n  postUesrId: null,\n  auth: getAuth(),\n  posts: [],\n  friends: [],\n  query: {},\n  comments: {},\n  postModalOpened: false\n};\n\nexport const StateContext = createContext();\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'login':\n      return {\n        ...state,\n        auth: action.auth\n      };\n    case 'logout':      \n      return {\n        ...initialState,\n        auth: null\n      };\n    case 'newPostCreated': \n      return {\n        ...state,\n        posts: [action.post, ...state.posts]\n      }\n    case 'appendPosts':\n      return {\n        ...state,\n        posts:\n          (action.query.offset != state.query.offset) ?\n            [...state.posts, ...action.posts] : state.posts,\n        query: action.query,\n        postUesrId: action.postUesrId\n      }\n    case 'getPosts':\n      return {\n        ...state,\n        posts: action.posts,\n        query: action.query,\n        postUesrId: action.postUesrId\n      }\n    case 'getComments':\n      return {\n        ...state,\n        comments: {\n          ...state.comments,\n          [action.postId]: action.comments\n        }\n      }\n    case 'getFriedns': \n      return {\n        ...state,\n        friends: action.friends\n      }\n    case 'updatePost': \n      return {\n        ...state,\n        posts: state.posts.map(v => {\n          if (v.seq === action.post.seq) {\n            return action.post;\n          } else {\n            return v;\n          }\n        })\n      }\n    case 'openPostModal':\n      return {\n        ...state,\n        postModalOpened: true\n      }\n    case 'togglePostModal':\n      return {\n        ...state,\n        postModalOpened: action.postModalOpened\n      }\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({reducer, initialState, children}) =>(\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\nimport Octicon, {Plus, Organization} from '@githubprimer/octicons-react'\nimport { Link } from \"@reach/router\"\nimport './Navigation.css';\nimport { useStateValue } from '../../state';\n\nexport const Navigation = () => {\n  const [isOpen, setisOpen] = useState(false);\n  const [{ auth }, dispatch] = useStateValue()\n\n  const toggleNavbar = () => {\n    setisOpen(!isOpen);\n  }\n\n  const handleSignout = () => {\n    localStorage.removeItem('auth_token');\n    dispatch({\n      type: 'logout'\n    });\n    return false;\n  }\n\n  return (\n    <Navbar fixed=\"true\" color=\"blue\" dark expand=\"md\" sticky=\"top\">\n      <Link to=\"/\">\n        <NavbarBrand tag=\"span\" className=\"mr-auto\">\n          <img src=\"/img/bi-symbol-light.png\" alt=\"프로그래머스 로고\"></img>\n        </NavbarBrand>\n      </Link>\n      <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav navbar className=\"mr-auto\">\n          {auth && <NavItem>\n            <NavLink onClick={() => dispatch({ type: \"openPostModal\" })}>\n              <Octicon icon={Plus} size='small' /> 공유하기\n            </NavLink>\n          </NavItem>}\n          {auth && <NavItem>\n            <Link to=\"/friends\">\n              <NavLink tag=\"span\">\n                <Octicon icon={Organization} size='small' /> 친구\n              </NavLink>\n            </Link>\n          </NavItem>}\n          {/* <NavItem>\n            <NavLink href=\"#\">\n              <Octicon icon={Bell} size='small' /> 알림\n            </NavLink>\n          </NavItem> */}\n        </Nav>\n        {\n          (auth != null) ? \n            <Nav navbar>\n              <NavItem>\n                <NavLink tag=\"span\">\n                  {(auth.name) ? auth.name : auth.email}\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink onClick={handleSignout}>로그아웃</NavLink>\n              </NavItem>\n            </Nav> :\n            <Nav navbar>\n              <NavItem>\n                <Link to=\"/login\">\n                  <NavLink tag=\"span\">로그인</NavLink>\n                </Link>\n              </NavItem>\n\n              <NavItem>\n                <Link to=\"/signup\">\n                  <NavLink tag=\"span\">회원가입</NavLink>\n                </Link>\n              </NavItem>\n            </Nav>\n        }        \n      </Collapse>\n    </Navbar>\n  )\n}","import axios from 'axios';\nimport { getAuthToken } from './services/auth'\n\nconst url = '/api'\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport function login({ email, passwd }) {\n  return axios.post(`${url}/auth`, { \n    principal: email, \n    credentials: passwd \n  }).then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nexport function getPost(userId, { offset, limit }) {\n  return axios.get(`${url}/user/${userId}/post/list`, {\n      ...getApiKeyHeader(),\n      params: {\n        offset,\n        limit,  \n      }\n    })\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error(v.error.message);\n      }\n      return v.response;\n    });\n}\n\nexport function getComments(userId, postId) {\n  return axios.get(`${url}/user/${userId}/post/${postId}/comment/list`, {\n    ...getApiKeyHeader()\n  })\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error(v.error.message);\n      }\n      return v.response;\n    });\n}\n\nexport function getFreinds() {\n  return axios.get(`${url}/user/connections`, getApiKeyHeader())\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error(v.error.message);\n      }\n      return v.response;\n    });\n}\n\nexport function sendPost(contents) {\n  return axios.post(`${url}/post`, { contents }, getApiKeyHeader())\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nexport function writeComment(userId, postId, contents) {\n  return axios.post(`${url}/user/${userId}/post/${postId}/comment`, { contents }, getApiKeyHeader())\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nexport function likePost(userId, postId) {\n  return axios.patch(`${url}/user/${userId}/post/${postId}/like`, {}, getApiKeyHeader())\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nexport function signup(principal, name, credentials) {\n  return axios.post(`${url}/user/join`, { \n    principal, \n    name,\n    credentials \n  }).then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nexport function userExists(address) {\n  return axios.post(`${url}/user/exists`, { address }).then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nfunction getApiKeyHeader() {\n  const token = getAuthToken();\n  if (token) {\n    return {\n      headers: {\n        'api_key': 'Bearer ' + getAuthToken() \n      }\n    }\n  } else {\n    return {}\n  } \n}","import React, { useEffect, useState } from 'react'\nimport { Button } from 'reactstrap';\nimport './Comments.css';\nimport { useStateValue } from '../../state';\nimport { getComments, writeComment } from '../../api';\nimport Moment from 'react-moment';\n\nconst Comment = (props) => {\n  return (\n    <>\n      <div className=\"contents-accounts inline-items\">\n        {/* <img\n          src=\"https://s3.ap-northeast-2.amazonaws.com/grepp-cloudfront/programmers_imgs/learn/instructor_img/instructor_yunkiMoon_circle.png\"\n          alt=\"author\" /> */}\n        <div className=\"contents-date\">\n          <a className=\"h6 post__author-name\" href=\"#\">{props.writer.name}</a>\n          <div className=\"published-date\">\n            <Moment fromNow ago>{props.createAt}</Moment>\n          </div>\n        </div>\n      </div>\n      <p>{props.contents}</p>\n    </>\n  )\n}\n\nexport default function Comments(props) {\n  const [{ postUesrId, comments }, dispatch] = useStateValue();\n  const [text, setText] = useState(\"\");\n  \n  const handleResults = comments => {\n    dispatch({\n      type: 'getComments',\n      postId: props.postId,\n      comments\n    });\n  }\n  useEffect(() => {\n    getComments(postUesrId, props.postId)\n      .then(handleResults)\n  }, [])\n\n  const sendPost = e => {\n    if (text.length === 0) {\n      return false;\n    }\n    writeComment(postUesrId, props.postId, text)\n      .then(_ => getComments(postUesrId, props.postId))\n      .then(handleResults)\n      .then(_ => setText(\"\"))\n      .catch(alert);\n  }\n\n  const postCommests = comments[props.postId] || [];\n\n  return (\n    <ul className=\"comments\">\n     { postCommests.map(v => \n        <li className=\"comment\" key={v.seq}>      \n          <Comment {...v} ></Comment>             \n        </li>\n     )}\n      <form className=\"comment-form inline-items\">\n        <div className=\"contents-accounts inline-items\">\n          {/* <img src=\"https://s3.ap-northeast-2.amazonaws.com/grepp-cloudfront/programmers_imgs/learn/instructor_img/instructor_yunkiMoon_circle.png\"\n            alt=\"author\" /> */}\n          <div className=\"form-group\">\n            <textarea value={text} onChange={e => setText(e.target.value)} className=\"form-control\" placeholder=\"\"></textarea>\n          </div>\n        </div>\n        <Button color=\"primary\" onClick={sendPost}>공유하기</Button>\n      </form>\n    </ul>\n  )\n}\n","import React from 'react'\nimport './Post.css';\nimport Octicon, {KebabHorizontal, Thumbsup, Comment} from '@githubprimer/octicons-react';\nimport Comments from '../../containers/comments/Comments'\nimport Moment from 'react-moment';\n\nexport default function Post(props) {\n  // const onLikeClick = e => { props.onLikeClick(); false; };\n  return (\n    <div className=\"ui-box\">\n      <article className=\"contents\">\n        <div className=\"contents-accounts inline-items\">\n            {/* <img src=\"https://s3.ap-northeast-2.amazonaws.com/grepp-cloudfront/programmers_imgs/learn/instructor_img/instructor_yunkiMoon_circle.png\"\n                alt=\"author\"/> */}\n            <div className=\"contents-date\">\n              <a className=\"h6 contents-accounts-name\">{props.username}</a>\n              <div className=\"published-date\">\n              <Moment fromNow ago>{props.createAt}</Moment>\n              </div>\n            </div>\n            <div className=\"more\">\n              <Octicon icon={KebabHorizontal} size=\"small\" ></Octicon>\n              <ul className=\"featured-dropdown\">\n                <li>\n                  <a href=\"#\">게시물 수정</a>\n                </li>\n                <li>\n                  <a href=\"#\">게시물 삭제</a>\n                </li>\n              </ul>\n            </div>\n        </div>\n        <p>\n          {props.contents}\n        </p>\n        <div className=\"contents-info inline-items\">\n          <a href=\"#\" onClick={props.onLikeClick}>\n            <div className={\"contents-icon inline-items\" + ((props.likesOfMe) ? \" likesOfMe\" : \"\")}>\n              <Octicon icon={Thumbsup} size=\"small\" ></Octicon>\n              <span>{props.likes}개</span>\n            </div>\n          </a>\n          <a href=\"\">\n            <div className=\"reply\">\n              <Octicon icon={Comment} size=\"small\"></Octicon>\n              <span>{props.comments}개</span>\n            </div>\n          </a>\n        </div>\n      </article>\n      <Comments postId={props.seq} userId={props.userId}></Comments>\n    </div>\n  )\n}","import React, { useState, useEffect, useRef } from 'react'\nimport Post from '../../components/post/Post'\nimport './Posts.css';\nimport { useStateValue } from '../../state';\nimport { getPost, likePost } from '../../api';\nimport { Redirect } from '@reach/router';\n\nconst pageCount = 5\n\nexport const Posts = ( { friendId }) => {  \n  const [{ posts, auth,  }, dispatch] = useStateValue();\n  const [error, setError] = useState(null);  \n  const [query, setQuery] = useState({\n    offset: 0,\n    limit: pageCount\n  });\n  const latestQuery = useRef(query);\n  const latestPosts = useRef(posts);\n\n  useEffect(() => {\n    latestQuery.current = {\n      offset: query.offset,\n      limit: query.limit\n    };\n  });\n\n  useEffect(() => {\n    latestPosts.current = posts;\n  });\n\n  const handleResult = posts => {\n    setError(null);\n    dispatch({\n      type: (query.offset === 0) ? 'getPosts' : 'appendPosts',\n      posts,\n      query,\n      postUesrId: friendId || auth.userKey\n    });\n  };\n\n  const handleError = e => {\n    console.error(e);\n    if (e.response.status === 404) {\n      setError('사용자를 찾을 수 없습니다.');\n    }\n  }\n\n  const handleScroll = (e) => {\n    var d = document.documentElement;\n    var offset = Math.max(window.pageYOffset, d.scrollTop, document.body.scrollTop) + window.innerHeight;\n    var height = d.offsetHeight;\n    // console.log(Math.round(offset), height)\n    // console.log(latestQuery.current.length, latestQuery.current.offset + pageCount)\n    if (Math.round(offset) == height && latestPosts.current.length == latestQuery.current.offset + pageCount) {\n      setQuery({\n        offset: latestQuery.current.offset + pageCount,\n        limit: pageCount\n      });\n    } \n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {      \n      window.addEventListener('scroll', handleScroll);\n    }\n  }, [])\n\n  useEffect(() => {\n    if (friendId || auth) {\n      getPost(friendId || auth.userKey, query)\n        .then(handleResult)\n        .catch(handleError); \n    }\n  }, [friendId, query])\n  \n  const likeThisPost = v => {  \n    likePost(friendId || auth.userKey, v.seq)\n      .then(post => {\n        console.log(v);\n        dispatch({\n          type: 'updatePost',\n          post\n        });\n      })\n  }\n\n  return (\n    <div className=\"row\">\n      {\n        (error) ? <div className=\"col-12 text-center mt-5\"><h1>{error}</h1> </div> :\n        (friendId) ? posts.map(v => {          \n          return <Post key={v.seq} {...v}\n            username={(v.writer) ? v.writer.name : v.writer.email.address}\n            onLikeClick={e => {likeThisPost(v); e.preventDefault();}}></Post>\n        }) : \n        (auth) ? posts.map(v => {\n          return <Post key={v.seq} {...v} username={(auth.name) ? auth.name : auth.email}\n            onLikeClick={e => { likeThisPost(v); e.preventDefault(); }}></Post>\n        }) : <Redirect to='/login' noThrow></Redirect>\n      }\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Button } from 'reactstrap'\nimport './Friends.css';\nimport Octicon, {Person} from '@githubprimer/octicons-react'\nimport { getFreinds } from '../../api';\nimport { useStateValue } from '../../state';\nimport { Link } from '@reach/router';\n\n\nconst Friend = (props) => {  \n  return (\n    <li>\n      <div className=\"user-thumb\">\n        {\n          // <img src=\"https://s3.ap-northeast-2.amazonaws.com/grepp-cloudfront/programmers_imgs/learn/instructor_img/instructor_yunkiMoon_circle.png\" alt=\"author\"/>\n        }\n      </div>\n      <div className=\"noti-text\">\n        <Link to={`./${props.seq}`} className=\"h6 noti-account\">{(props.name) ? props.name : props.email.address}</Link>\n      </div>\n      <span className=\"noti-icon\">\n        <Button color=\"danger\">\n          <Octicon icon={Person} size='small' /> 친구 제거\n        </Button>\n        {/* <a href=\"#\" className=\"btn btn-sm btn-primary\"><i class=\"fas fa-user-plus\"></i>친구 추가</a> */}\n      </span>\n    </li>\n  )\n}\n\nconst Friends = () => {\n  const [{ friends }, dispatch] = useStateValue()\n\n  useEffect(() => {\n    getFreinds()\n      .then(friends => {\n        dispatch({\n          type: 'getFriedns',\n          friends\n        })\n      });\n  }, [friends.length])\n\n  return (\n    <div className=\"row\">\n      <div className=\"ui-box\">\n        <div className=\"dropdown-title\">\n          <h6 className=\"title\">친구목록</h6>\n        </div>\n        <ul className=\"noti-list friend-requests\">\n          {(friends.length > 0) ? friends.map(v => \n            <Friend key={v.seq} {...v}/>\n          ) : <li>친구가 없습니다.</li>}\n        </ul>\n      </div>        \n    </div>\n  );\n}\n\nexport default Friends","import React from 'react'\nimport './Login.css';\nimport { Redirect, Link } from '@reach/router'\nimport { useStateValue } from '../../state';\nimport { login } from '../../api';\nimport jwtDecode from 'jwt-decode';\n\nexport const Login = () => {\n  const [email, setEmail] = React.useState(\"\");\n  const [passwd, setPasswd] = React.useState(\"\");\n  const [{ auth }, dispatch] = useStateValue()\n\n  const changeEmail = e => {\n    setEmail(e.currentTarget.value);\n  };\n  const changePasswd = e => {\n    setPasswd(e.currentTarget.value);\n  };\n  \n  if (auth) {\n    return (<Redirect to=\"/\" noThrow />);\n  }\n\n  const handleSubmit = async () => {\n    try {\n      const rep = await login({ email, passwd });\n      const auth = jwtDecode(rep.apiToken);\n      \n      localStorage.setItem('auth_token', rep.apiToken);\n      dispatch({\n        type: 'login',\n        auth\n      });\n    } catch (error) {\n      alert(error);\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <h1 className=\"text-center login-title\">웹 트랙 로그인</h1>\n      <div className=\"account-wall\">\n        <form className=\"form-signin\">\n          <input type=\"email\" value={email} onChange={changeEmail} className=\"form-control\" placeholder=\"Email\" required autoFocus />\n          <input type=\"password\" value={passwd} onChange={changePasswd} className=\"form-control\" placeholder=\"Password\" required />\n          <button onClick={() => {handleSubmit(); return false;} } className=\"btn btn-lg btn-primary btn-block\" type=\"button\">로그인</button>\n        </form>\n      </div>\n      <p className=\"text-help text-center\">\n        계정이 필요하신가요?\n        {\" \"}<Link to=\"/signup\" className=\"text-center new-account\">계정 만들기</Link>\n      </p>\n    </>\n  )\n}","import React, { useState } from 'react'\nimport './Signup.css';\nimport { Link } from '@reach/router';\nimport { signup, userExists } from '../../api';\nimport { navigate } from '@reach/router';\n\nconst Signup = () => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n\n  const join = (e) => {\n    if (password !== rePassword) {\n      alert('패스워드가 동일하지 않습니다.');\n      return;\n    }\n    userExists(email)\n      .then(v => {\n        if (v === true) {\n          throw new Error(`${email} 해당 이메일은 이미 존재 합니다.`);\n        }\n        return signup(email, name, password,);\n      })\n      .then(v => {\n        alert(`${email}로 가입이 완료되었습니다.`);\n        navigate('/login')\n      })\n      .catch(e => {\n        if (e.response) {\n          alert(e.response.data.message);\n        }\n        if (e.message) {\n          alert(e.message);\n        }\n        console.dir(e);\n        \n      })\n    \n    return false;\n  }\n\n  return (\n    <>\n      <h1 className=\"text-center signup-title\">계정 만들기</h1>\n      <div className=\"account-wall\">\n          <form className=\"form-signup\">\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-input\" name=\"email\" id=\"email\" placeholder=\"Your Email\" \n                  value={email} onChange={v => setEmail(v.target.value)}/>\n              </div>\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-input\" name=\"name\" id=\"name\" placeholder=\"Your Name\" \n                  value={name} onChange={v => setName(v.target.value)}/>\n              </div>\n              <div className=\"form-group\">\n                <input type=\"password\" className=\"form-input\" name=\"password\" id=\"password\" placeholder=\"Password\" \n                  value={password} onChange={v => setPassword(v.target.value)}/>\n              </div>\n              <div className=\"form-group\">\n                <input type=\"password\" className=\"form-input\" name=\"re_password\" id=\"re_password\" placeholder=\"Repeat your password\" \n                  value={rePassword} onChange={v => setRePassword(v.target.value)}/>\n              </div>\n              <button className=\"btn btn-lg btn-primary btn-block\" type=\"button\" onClick={join}>가입하기</button>\n          </form>\n      </div>\n      <p className=\"text-help text-center\">\n        이미 계정이 있으신가요?\n        {\" \"}\n        <Link to=\"/login\" className=\"text-center login-here\">로그인 하기</Link>\n      </p>\n    </>\n  )\n}\n\nexport default Signup;","import React, { useState } from 'react'\nimport { navigate } from '@reach/router';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { sendPost } from '../../api';\nimport { useStateValue } from '../../state'\n\nfunction PostModal() {\n  const [contents, setContents] = useState(\"\");\n  const [{ postModalOpened, auth }, dispatch] = useStateValue();\n\n  const toggle = () => {\n    dispatch({ \n      type: 'togglePostModal',\n      postModalOpened: !postModalOpened\n    });\n  }\n\n  const post = () => {\n    if (contents.length > 0) {\n      sendPost(contents)\n        .then(v => {\n          try {\n            navigate('/');\n          } catch (e) {\n            console.log(e);\n            console.dir(e);\n          }        \n          return v;\n        })\n        // .then(v => getPost(auth.userKey, query))\n        .then(post => {\n          dispatch({\n            type: 'newPostCreated',\n            post,\n            postUesrId: auth.userKey\n          });\n          setContents('')\n          toggle();\n        })\n        .catch(e => {\n          if (e.response) {\n            alert(e.response.data.message);\n          }\n          console.dir(e);\n        });\n    }\n  }\n  return (\n    <Modal isOpen={postModalOpened} toggle={toggle} className='post-modal'>\n      <ModalHeader toggle={toggle}>게시물 작성</ModalHeader>\n      <ModalBody>\n        <form>\n          <textarea className=\"form-control input-lg\" \n            autoFocus={true} placeholder=\"무슨 생각을 하고 계신가요?\" spellCheck={false} \n            value={contents} onChange={e => setContents(e.target.value)}>\n          </textarea>\n        </form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={post}>공유하기</Button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default PostModal\n","import React from 'react';\nimport './App.css';\nimport { Navigation } from './components/navigation/Navigation';\nimport { Posts } from './containers/posts/Posts'\nimport { Router } from \"@reach/router\"\nimport Friends from './containers/friends/Friends'\nimport { Login } from './components/login/Login'\nimport Signup from './components/signup/Signup'\nimport { StateProvider, reducer, initialState } from './state';\nimport PostModal from './components/postModal/PostModal';\nimport Moment from 'react-moment';\nimport 'moment/locale/ko';\n\nMoment.globalLocale = 'ko';\n\nconst App = () => {\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>    \n      <Navigation></Navigation>\n\n      <div className=\"container\">\n        <Router>\n          <Posts path=\"/\" />\n          <Friends path=\"/friends\" />\n          <Posts path=\"/friends/:friendId\"/>\n          <Login path='/login' />\n          <Signup path='/signup' />\n        </Router> \n      </div>\n      \n      <PostModal></PostModal>\n\n    </StateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}