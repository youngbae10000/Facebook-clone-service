{"version":3,"sources":["state.js","components/navigation/Navigation.js","components/post/Post.js","services/auth.js","api.js","containers/posts/Posts.js","containers/friends/Friends.js","components/login/Login.js","components/signup/Signup.js","components/postModal/PostModal.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","reducer","state","action","type","Object","objectSpread","auth","posts","friends","postModalOpened","StateProvider","_ref","initialState","children","react_default","a","createElement","Provider","value","useReducer","useStateValue","useContext","Navigation","props","_useState","useState","_useState2","slicedToArray","isOpen","setisOpen","_useStateValue","_useStateValue2","dispatch","Navbar","fixed","color","dark","expand","sticky","es","to","NavbarBrand","tag","className","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","e","index_esm","icon","Plus","size","Organization","name","email","localStorage","removeItem","Post","username","KebabHorizontal","href","contents","Thumbsup","likes","Comment","comments","getAuthToken","getItem","getAuth","authToken","jwtDecode","url","login","passwd","axios","post","concat","principal","credentials","then","v","data","success","Error","response","getPost","userId","get","getApiKeyHeader","error","message","headers","api_key","defaults","Posts","friendId","_useStateValue2$","setError","handleResult","handleError","console","status","useEffect","userKey","catch","map","log","Post_Post","assign","key","seq","writer","address","noThrow","Friend","Button","Person","Friends","length","Friends_Friend","Login","_React$useState","React","_React$useState2","setEmail","_React$useState3","_React$useState4","setPasswd","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","rep","_auth","wrap","_context","prev","next","sent","apiToken","setItem","t0","alert","abrupt","stop","apply","this","arguments","Fragment","onChange","currentTarget","placeholder","required","autoFocus","Signup","_useState3","_useState4","setName","_useState5","_useState6","password","setPassword","_useState7","_useState8","rePassword","setRePassword","id","target","userExists","signup","navigate","dir","PostModal","setContents","toggle","Modal","ModalHeader","ModalBody","spellCheck","ModalFooter","sendPost","App","state_StateProvider","Navigation_Navigation","Posts_Posts","path","containers_friends_Friends","Login_Login","components_signup_Signup","postModal_PostModal","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.750b0039.chunk.js","sourcesContent":["\nimport React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'login':\n      return {\n        ...state,\n        auth: action.auth\n      };\n    case 'logout':      \n      return {\n        ...state,\n        auth: null\n      }\n    case 'getMyPosts':\n      return {\n        ...state,\n        posts: action.posts\n      }\n    case 'getFriedns': \n      return {\n        ...state,\n        friends: action.friends\n      }\n    case 'openPostModal':\n      return {\n        ...state,\n        postModalOpened: true\n      }\n    case 'togglePostModal':\n      return {\n        ...state,\n        postModalOpened: action.postModalOpened\n      }\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({reducer, initialState, children}) =>(\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\nimport Octicon, {Plus, Organization, Bell} from '@githubprimer/octicons-react'\nimport { Link } from \"@reach/router\"\nimport './Navigation.css';\nimport { useStateValue } from '../../state';\n\nexport const Navigation = (props) => {\n  const [isOpen, setisOpen] = useState(false);\n  const [{ auth }, dispatch] = useStateValue()\n\n  const toggleNavbar = () => {\n    setisOpen(!isOpen);\n  }\n\n  const handleSignout = () => {\n    localStorage.removeItem('auth_token');\n    dispatch({\n      type: 'logout'\n    });\n    return false;\n  }\n\n  return (\n    <Navbar fixed=\"true\" color=\"blue\" dark expand=\"md\" sticky=\"top\">\n      <Link to=\"/\">\n        <NavbarBrand tag=\"span\" className=\"mr-auto\">\n          <img src=\"/img/bi-symbol-light.png\" alt=\"프로그래머스 로고\"></img>\n        </NavbarBrand>\n      </Link>\n      <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav navbar className=\"mr-auto\">\n          <NavItem>\n            <NavLink onClick={e => dispatch({ type: \"openPostModal\" })}>\n              <Octicon icon={Plus} size='small' /> 공유하기\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/friends\">\n              <NavLink tag=\"span\">\n                <Octicon icon={Organization} size='small' /> 친구\n              </NavLink>\n            </Link>\n          </NavItem>\n          {/* <NavItem>\n            <NavLink href=\"#\">\n              <Octicon icon={Bell} size='small' /> 알림\n            </NavLink>\n          </NavItem> */}\n        </Nav>\n        {\n          (auth != null) ? \n            <Nav navbar>\n              <NavItem>\n                <NavLink tag=\"span\">\n                  {(auth.name) ? auth.email : auth.email}\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink onClick={handleSignout}>로그아웃</NavLink>\n              </NavItem>\n            </Nav> :\n            <Nav navbar>\n              <NavItem>\n                <Link to=\"/login\">\n                  <NavLink tag=\"span\">로그인</NavLink>\n                </Link>\n              </NavItem>\n\n              <NavItem>\n                <Link to=\"/signup\">\n                  <NavLink tag=\"span\">회원가입</NavLink>\n                </Link>\n              </NavItem>\n            </Nav>\n        }        \n      </Collapse>\n    </Navbar>\n  )\n}","import React from 'react'\nimport './Post.css';\nimport Octicon, {KebabHorizontal, Thumbsup, Comment} from '@githubprimer/octicons-react';\n\nexport default function Post(props) {\n  return (\n    <div className=\"ui-box\">\n      <article className=\"contents\">\n        <div className=\"contents-accounts inline-items\">\n            {/* <img src=\"https://s3.ap-northeast-2.amazonaws.com/grepp-cloudfront/programmers_imgs/learn/instructor_img/instructor_yunkiMoon_circle.png\"\n                alt=\"author\"/> */}\n            <div className=\"contents-date\">\n              <a className=\"h6 contents-accounts-name\">{props.username}</a>\n              <div className=\"published-date\">\n                <time>3분</time>\n              </div>\n            </div>\n            <div className=\"more\">\n              <Octicon icon={KebabHorizontal} size=\"small\" ></Octicon>\n              <ul className=\"featured-dropdown\">\n                <li>\n                  <a href=\"#\">게시물 수정</a>\n                </li>\n                <li>\n                  <a href=\"#\">게시물 삭제</a>\n                </li>\n              </ul>\n            </div>\n        </div>\n        <p>\n          {props.contents}\n        </p>\n        <div className=\"contents-info inline-items\">\n          <a href=\"\">\n            <div className=\"contents-icon inline-items\">\n              <Octicon icon={Thumbsup} size=\"small\" ></Octicon>\n              <span>{props.likes}개</span>\n            </div>\n          </a>\n          <a href=\"\">\n            <div className=\"reply\">\n              <Octicon icon={Comment} size=\"small\"></Octicon>\n              <span>{props.comments}개</span>\n            </div>\n          </a>\n        </div>\n      </article>\n    </div>\n  )\n}","import * as React from \"react\";\nimport jwtDecode from 'jwt-decode';\nimport { login } from '../api'\n\nconst getAuthToken = () => {\n  return localStorage.getItem(\"auth_token\");\n};\n\nconst getAuth= () => {\n  const authToken = localStorage.getItem(\"auth_token\");\n    if (authToken) {\n      return jwtDecode(authToken);\n    }\n    return null;\n};\n\nexport { getAuthToken, getAuth };","import axios from 'axios';\nimport { getAuthToken } from './services/auth'\n\nconst url = '/api'\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport function login({ email, passwd }) {\n  return axios.post(`${url}/auth`, { \n    principal: email, \n    credentials: passwd \n  }).then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nexport function getPost(userId) {\n  return axios.get(`${url}/user/${userId}/post/list`, getApiKeyHeader())\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error(v.error.message);\n      }\n      return v.response;\n    });\n}\n\nexport function getFreinds() {\n  return axios.get(`${url}/user/connections`, getApiKeyHeader())\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error(v.error.message);\n      }\n      return v.response;\n    });\n}\n\n\nexport function sendPost(contents) {\n  return axios.post(`${url}/post`, { contents }, getApiKeyHeader())\n    .then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nexport function signup(principal, name, credentials) {\n  return axios.post(`${url}/user/join`, { \n    principal, \n    name,\n    credentials \n  }).then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nexport function userExists(email) {\n  return axios.post(`${url}/user/exists`, { email }).then(v => v.data)\n    .then(v => {\n      if (!v.success) {\n        throw new Error();\n      }\n      return v.response;\n    });\n}\n\nfunction getApiKeyHeader() {\n  const token = getAuthToken();\n  if (token) {\n    return {\n      headers: {\n        'api_key': 'Bearer ' + getAuthToken() \n      }\n    }\n  } else {\n    return {}\n  } \n}","import React, { useState, useEffect } from 'react'\nimport Post from '../../components/post/Post'\nimport './Posts.css';\nimport { useStateValue } from '../../state';\nimport { getPost } from '../../api';\nimport { Redirect } from '@reach/router';\n\nexport const Posts = ( { friendId }) => {  \n  const [{ posts, auth }, dispatch] = useStateValue();\n  const [error, setError] = useState(null);\n\n  const handleResult = posts => {\n    setError(null);\n    dispatch({\n      type: 'getMyPosts',\n      posts\n    });\n  };\n\n  const handleError = e => {\n    console.error(e);\n    if (e.response.status === 404) {\n      setError('사용자를 찾을 수 없습니다.');\n    }\n  }\n\n  useEffect(() => {\n    if (friendId || auth) {\n      getPost(friendId || auth.userKey)\n        .then(handleResult)\n        .catch(handleError); \n    }\n  }, [friendId])\n  \n  return (\n    <div className=\"row\">\n      {\n        (error) ? <div className=\"col-12 text-center mt-5\"><h1>{error}</h1> </div> :\n        (friendId) ? posts.map(v => {\n          console.log(v)\n          return <Post key={v.seq} {...v} username={(v.writer.name) ? v.writer.name : v.writer.email.address}></Post>\n        }) : \n        (auth) ? posts.map(v => {\n          return <Post key={v.seq} {...v} username={(auth.name) ? auth.name : auth.email}></Post>\n        }) : <Redirect to='/login' noThrow></Redirect>\n      }\n    </div>\n  )\n}\n","import React, { Component, useState, useEffect } from 'react'\nimport { Button } from 'reactstrap'\nimport './Friends.css';\nimport Octicon, {Person, Plus} from '@githubprimer/octicons-react'\nimport { getFreinds } from '../../api';\nimport { useStateValue } from '../../state';\nimport { Link } from '@reach/router';\n\nconst Suggestion = () => {\n  return (\n    <li>\n      <div className=\"user-thumb\">\n        <img src=\"https://s3.ap-northeast-2.amazonaws.com/grepp-cloudfront/programmers_imgs/learn/instructor_img/instructor_yunkiMoon_circle.png\" alt=\"author\" />\n      </div>\n      <div className=\"noti-text\">\n        <a href=\"#\" className=\"h6 noti-account\">이웅</a>\n        <span className=\"friend-mutual\">함께 아는 친구 16명</span>\n      </div>\n      <span className=\"noti-icon\">\n        <Button color=\"primary\">\n          <Octicon icon={Person} size='small' /> 친구 추가\n        </Button>\n        {/* <a href=\"#\" className=\"btn btn-sm btn-primary\"><i class=\"fas fa-user-plus\"></i>친구 추가</a> */}\n      </span>\n    </li>\n  )\n}\n\nconst Friend = (props) => {  \n  return (\n    <li>\n      <div className=\"user-thumb\">\n        {\n          // <img src=\"https://s3.ap-northeast-2.amazonaws.com/grepp-cloudfront/programmers_imgs/learn/instructor_img/instructor_yunkiMoon_circle.png\" alt=\"author\"/>\n        }\n      </div>\n      <div className=\"noti-text\">\n        <Link to={`./${props.seq}`} className=\"h6 noti-account\">{(props.name) ? props.name : props.email.address}</Link>\n      </div>\n      <span className=\"noti-icon\">\n        <Button color=\"danger\">\n          <Octicon icon={Person} size='small' /> 친구 제거\n        </Button>\n        {/* <a href=\"#\" className=\"btn btn-sm btn-primary\"><i class=\"fas fa-user-plus\"></i>친구 추가</a> */}\n      </span>\n    </li>\n  )\n}\n\nconst Friends = () => {\n  const [{ friends }, dispatch] = useStateValue()\n\n  useEffect(() => {\n    getFreinds()\n      .then(friends => {\n        dispatch({\n          type: 'getFriedns',\n          friends\n        })\n      });\n  }, [friends.length])\n\n  return (\n    <div className=\"row\">\n      <div className=\"ui-box\">\n        <div className=\"dropdown-title\">\n          <h6 className=\"title\">친구목록</h6>\n        </div>\n        <ul className=\"noti-list friend-requests\">\n          {(friends.length > 0) ? friends.map(v => \n            <Friend key={v.seq} {...v}/>\n          ) : <li>친구가 없습니다.</li>}\n        </ul>\n      </div>        \n    </div>\n  );\n}\n\nexport default Friends","import React, { useEffect } from 'react'\nimport './Login.css';\nimport { useAuthState } from '../../services/auth';\nimport { Redirect, redirectTo, Link } from '@reach/router'\nimport { useStateValue } from '../../state';\nimport { login } from '../../api';\nimport jwtDecode from 'jwt-decode';\n\nexport const Login = () => {\n  const [email, setEmail] = React.useState(\"\");\n  const [passwd, setPasswd] = React.useState(\"\");\n  const [{ auth }, dispatch] = useStateValue()\n\n  const changeEmail = e => {\n    setEmail(e.currentTarget.value);\n  };\n  const changePasswd = e => {\n    setPasswd(e.currentTarget.value);\n  };\n  \n  if (auth) {\n    return (<Redirect to=\"/\" noThrow />);\n  }\n\n  const handleSubmit = async () => {\n    try {\n      const rep = await login({ email, passwd });\n      const auth = jwtDecode(rep.apiToken);\n      \n      localStorage.setItem('auth_token', rep.apiToken);\n      dispatch({\n        type: 'login',\n        auth\n      });\n    } catch (error) {\n      alert(error);\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <h1 className=\"text-center login-title\">웹 트랙 로그인</h1>\n      <div className=\"account-wall\">\n        <form className=\"form-signin\">\n          <input type=\"email\" value={email} onChange={changeEmail} className=\"form-control\" placeholder=\"Email\" required autoFocus />\n          <input type=\"password\" value={passwd} onChange={changePasswd} className=\"form-control\" placeholder=\"Password\" required />\n          <button onClick={e => {handleSubmit(); return false;} } className=\"btn btn-lg btn-primary btn-block\" type=\"button\">로그인</button>\n        </form>\n      </div>\n      <p className=\"text-help text-center\">\n        계정이 필요하신가요?\n        {\" \"}<Link to=\"/signup\" className=\"text-center new-account\">계정 만들기</Link>\n      </p>\n    </>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport './Signup.css';\nimport { Link } from '@reach/router';\nimport { signup, userExists } from '../../api';\nimport { navigate } from '@reach/router';\n\nconst Signup = () => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n\n  const join = (e) => {\n    if (password !== rePassword) {\n      alert('패스워드가 동일하지 않습니다.');\n    }\n    userExists(email)\n      .then(v => {\n        return signup(email, name, password,);\n      })\n      .then(v => {\n        alert(`${email}로 가입이 완료되었습니다.`);\n        navigate('/login')\n      })\n      .catch(e => {\n        if (e.response) {\n          alert(e.response.data.message);\n        }\n        console.dir(e);\n        \n      })\n    \n    return false;\n  }\n\n  return (\n    <>\n      <h1 className=\"text-center signup-title\">계정 만들기</h1>\n      <div className=\"account-wall\">\n          <form className=\"form-signup\">\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-input\" name=\"email\" id=\"email\" placeholder=\"Your Email\" \n                  value={email} onChange={v => setEmail(v.target.value)}/>\n              </div>\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-input\" name=\"name\" id=\"name\" placeholder=\"Your Name\" \n                  value={name} onChange={v => setName(v.target.value)}/>\n              </div>\n              <div className=\"form-group\">\n                <input type=\"password\" className=\"form-input\" name=\"password\" id=\"password\" placeholder=\"Password\" \n                  value={password} onChange={v => setPassword(v.target.value)}/>\n              </div>\n              <div className=\"form-group\">\n                <input type=\"password\" className=\"form-input\" name=\"re_password\" id=\"re_password\" placeholder=\"Repeat your password\" \n                  value={rePassword} onChange={v => setRePassword(v.target.value)}/>\n              </div>\n              <button className=\"btn btn-lg btn-primary btn-block\" type=\"button\" onClick={join}>가입하기</button>\n          </form>\n      </div>\n      <p className=\"text-help text-center\">\n        이미 계정이 있으신가요?\n        {\" \"}\n        <Link to=\"/login\" className=\"text-center login-here\">로그인 하기</Link>\n      </p>\n    </>\n  )\n}\n\nexport default Signup;","import React, { useState } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { sendPost, getMyPost, getPost } from '../../api';\nimport { useStateValue } from '../../state'\n\nfunction PostModal() {\n  const [contents, setContents] = useState(\"\");\n  const [{ postModalOpened, auth }, dispatch] = useStateValue();\n\n  const toggle = () => {\n    dispatch({ \n      type: 'togglePostModal',\n      postModalOpened: !postModalOpened\n    });\n  }\n\n  const post = e => {\n    if (contents.length > 0) {\n      sendPost(contents)\n        .then(v => getPost(auth.userKey))\n        .then(posts => {\n          dispatch({\n            type: 'getMyPosts',\n            posts\n          });\n          setContents('')\n          toggle();\n        })\n        .catch(e => {\n          if (e.response) {\n            alert(e.response.data.message);\n          }\n          console.dir(e);\n        });\n    }\n  }\n  return (\n    <Modal isOpen={postModalOpened} toggle={toggle} className='post-modal'>\n      <ModalHeader toggle={toggle}>게시물 작성</ModalHeader>\n      <ModalBody>\n        <form>\n          <textarea className=\"form-control input-lg\" \n            autoFocus={true} placeholder=\"무슨 생각을 하고 계신가요?\" spellCheck={false} \n            value={contents} onChange={e => setContents(e.target.value)}>\n          </textarea>\n        </form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={post}>공유하기</Button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default PostModal\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Navigation } from './components/navigation/Navigation';\nimport { Posts } from './containers/posts/Posts'\nimport { Router } from \"@reach/router\"\nimport Friends from './containers/friends/Friends'\nimport { Login } from './components/login/Login'\nimport Signup from './components/signup/Signup'\nimport { StateProvider, reducer } from './state';\nimport { getAuth } from './services/auth'\n\nimport PostModal from './components/postModal/PostModal';\n\nconst App = () => {\n\n  const initialState = {\n    auth: getAuth(),\n    posts: [],\n    friends: [],\n    postModalOpened: false\n  };\n\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>    \n      <Navigation></Navigation>\n\n      <div className=\"container\">\n        <Router>\n          <Posts path=\"/\" />\n          <Friends path=\"/friends\" />\n          <Posts path=\"/friends/:friendId\"/>\n          <Login path='/login' />\n          <Signup path='/signup' />\n        </Router> \n      </div>\n      \n      <PostModal></PostModal>\n\n    </StateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}